doctype html
html(lang='zh-TW')
  head
    meta(charset='UTF-8')
    meta(http-equiv='Cache-control' content='public')
    meta(http-equiv='max-age' content='864000')
    meta(name='viewport' content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no')
    meta(name='author' content='Berglas')
    meta(name='copyright' content='Berglas')
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    title 巴格.生活日記•學習筆記
    link(rel='shortcut icon' type='image/x-icon' href='/favicon.ico')
    link(rel='stylesheet', type='text/css', href='/dest/css/main.css')
    script(src='https://code.jquery.com/jquery-3.5.0.min.js' integrity='sha256-xNzN2a4ltkB44Mc/Jz3pT4iU1cmeR0FkXs4pru/JxaQ=' crossorigin='anonymous')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/vue/2.6.11/vue.min.js')
    script(src='/dest/js/main.js')
    // Global site tag (gtag.js) - Google Analytics
    script(async='', src='https://www.googletagmanager.com/gtag/js?id=UA-166944924-1')
    script.
      window.dataLayer = window.dataLayer || []
      function gtag() { dataLayer.push(arguments) }
      gtag('js', new Date())
      gtag('config', 'UA-166944924-1')
  body
    #app
      .header
        .logo(onclick='javascript:location.href="/"')
        .title(onclick='javascript:location.href="/"')
          h1 巴格.生活日記•學習筆記
          span - 取之於網路，用之於網路 -
        ul.menu-list
          li(title='關於這裡')
            a(href='/dest/articles/2020/4/origin.html') 
              sapn 關於這裡
          li(title='所有文章')
            a(href='/dest/articles/1.html') 
              sapn 所有文章
          li(title='聯絡我')
            a(href='/resume.html') 
              sapn 聯絡我
      .container
        .float-box
          h2 文章分類: {{searchTag}}
          template(v-for='item in allTag')
            .tag(@click='setSearchTag(item)')  {{item}}
        .articles
          .cell(v-for='item in dataList')
            .main(@click='javascript:location.href=item.site + "/" +item.title + ".html"')
              h2.title {{item.cTitle}} 
              .preview
                img(:src='item.site + "/" + item.title + ".jpg"' )
              template(v-for="tag in item.tag")
                p.tag # {{tag}}
              p.depiction {{item.depiction}}
              p.time-mark {{item.date.substring(0, 10)}}
        .footer
          .license 
    script.
      new Vue({
        el: '#app',
        data () {
          return {
            allPageList: [],
            searchPageList: [],
            dataList: [],
            index: 0,
            amount: 9,
            allTag: [],
            searchTag: null
          }
        },
        watch: {
          index: {
            handler (val) {
              this.loadData()
            }
          },
          allPageList: {
            handler (val) {
              this.searchPageList = JSON.parse(JSON.stringify(val))
              val.forEach(e => {
                e.tag.forEach(tag => {
                  if (this.allTag.indexOf(tag) === -1 && tag !== '') {
                    this.allTag.push(tag)
                  }
                })
              })
            }
          },
          searchPageList: {
            handler (val) {
              this.loadData()              
            }
          },
          searchTag: {
            handler (val) {
              this.index = 0
              this.dataList = []
              let temp = JSON.parse(JSON.stringify(this.allPageList))
              this.searchPageList = temp.filter(e => {
                if (e.tag.find(tag => { return tag == this.searchTag})) {
                  return e
                }
              })
            }
          }
        },
        methods: {
          loadData () {
            this.dataList = this.dataList.concat(this.searchPageList.slice(this.index * this.amount, (this.index + 1) * this.amount))
          },
          setSearchTag (val) {
            this.searchTag = val
          },
          insertionSort (array, objName) { // 插入排序法(由大至小)
            let length = array.length
            let j
            let temp
            for (let i = 1; i < length; i++) {
              j = i
              temp = array[i]
              while (j > 0 && array[j - 1][objName] < temp[objName]) {
                array[j] = array[j - 1]
                j--
              }
              array[j] = temp
            }
            return array
          }
        },
        mounted () {
          window.addEventListener('scroll', () => {
            if (($(window).height() + $(window).scrollTop()) >= document.body.offsetHeight + 112) { // header 高度，因為她是flex
              this.index += 1
            }
          }, false)

          $.getJSON("/dest/articles/pageList.json", e => {
            this.allPageList = e
            this.insertionSort(this.allPageList, 'date')
          })
        }
      })